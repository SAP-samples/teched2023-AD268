const PlainRequest = require('./PlainRequest');


class CookieRequest extends PlainRequest {

    constructor(options) {
        super(options);
        this._cookies = options.cookies;
    }

    /**
     * Executes the request
     *
     * @returns {object} response - The http response
     * @throws Throws an error if the request fails. the error may has an .response property.
     */
    async execute() {
        if (!this._cookies) return super.execute();

        const cookieStore = this._cookies.cookieStore;
        if (!cookieStore) {
            throw new Error(`The cookies.cookieStore property needs to be provided if the cookies option is set. Current value: ${cookieStore}`);
        }

        const reqOptions = this.getOptions();

        const cookieSearchOptions = PlainRequest.buildOptions(reqOptions);
        const cookies = cookieStore.getCookies(cookieSearchOptions);

        if (cookies && cookies.length > 0) {
            const cookieHeader = cookieStore.buildCookieHeader(cookies);
            if (cookieHeader) {
                if (!reqOptions.headers) reqOptions.headers = {};
                Object.assign(reqOptions.headers, cookieHeader);
            }
        }

        const response = await super.execute();

        cookieStore.addCookies(response, cookieSearchOptions);

        return response;

    }
}

module.exports = CookieRequest;

