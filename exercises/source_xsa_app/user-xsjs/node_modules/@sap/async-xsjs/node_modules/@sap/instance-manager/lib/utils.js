'use strict';

var format = require('util').format;

module.exports = {
  isObject: isObject,
  isPlainObject: isPlainObject,
  isNonEmptyString: isNonEmptyString,
  isDefined: isDefined,
  isNonNegativeInteger: isNonNegativeInteger,
  isPositiveInteger: isPositiveInteger,
  validateNonNegativeInteger: validateNonNegativeInteger,
  validatePositiveInteger: validatePositiveInteger,
  safeJsonParse: safeJsonParse,
  urlAppendQueryString: urlAppendQueryString
};

function isObject(value) {
  return (typeof value === 'object' && value !== null);
}

function isPlainObject(value) {
  return isObject(value) && !Array.isArray(value);
}

function isNonEmptyString(value) {
  return (typeof value === 'string' && value.length);
}

function isDefined(value) {
  return (value !== undefined && value !== null);
}

function isNonNegativeInteger(value) {
  return (Number.isInteger(value) && value >= 0);
}

function isPositiveInteger(value) {
  return (Number.isInteger(value) && value > 0);
}

function validateNonNegativeInteger(options, property) {
  var value = options[property];
  if (isDefined(value) && !isNonNegativeInteger(value)) {
    throw new Error(format("Property '%s' should be a non-negative integer (if provided)", property));
  }
}

function validatePositiveInteger(options, property) {
  var value = options[property];
  if (isDefined(value) && !isPositiveInteger(value)) {
    throw new Error(format("Property '%s' should be a positive integer (if provided)", property));
  }
}

function safeJsonParse(str) {
  try {
    var data = JSON.parse(str);
    return { data: data };
  } catch (exc) {
    return { err: exc };
  }
}

function urlAppendQueryString(url, query) {
  if (query) {
    var queryString = '';
    for (var e in query) {
      if (queryString) {
        queryString += '&';
      }
      queryString += e + '=' + encodeURIComponent(query[e]).replace(/[!'()*]/g, function(c) {
        return '%' + c.charCodeAt(0).toString(16);
      });
    }
    if (queryString) {
      url += '?' + queryString;
    }
  }
  return url;
}
