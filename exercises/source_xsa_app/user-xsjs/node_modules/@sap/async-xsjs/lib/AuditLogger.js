'use strict';

var auditLog = require('@sap/audit-logging');

module.exports = AuditLogger;

function AuditLogger(credentials) {
  this._credentials = credentials;
  this._client = null;
}

AuditLogger.prototype.getClient = function (cb) {
  if (this._client) {
    return cb(null, this._client);
  }

  var self = this;
  var credentials = this._credentials;
  auditLog.v2(credentials, function (err, auditLogV2) {
    // the client might have already been set by another call to this method,
    // let's not overwrite what have been set
    if (!self._client) {
      var client = err ? auditLog(credentials) : auditLogV2;
      self._client = client;
    }

    cb(null, self._client);
  });
};

AuditLogger.prototype.logSecurityEvent = function (req, message, user, cb) {
  var ip = req.headers['x-forwarded-for'] || req.connection.remoteAddress;
  ip = ip.split(',')[0];

  this.getClient(function (err, client) {
    client.securityMessage(message)
      .by(user)
      .externalIP(ip)
      .log(cb);
  });
};
