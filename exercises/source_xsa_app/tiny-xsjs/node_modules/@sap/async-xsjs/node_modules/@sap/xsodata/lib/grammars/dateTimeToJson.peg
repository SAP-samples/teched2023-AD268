{
    function toString(value){
        if(Array.isArray(value)){
            return value.join('')
        }else{
            return value;
        }
    }

    function toNumber(value){
            return Number(value);
    }

    function isNull(value){
        return (value === null || value === undefined) === true
    }

    function padZero(value){
        if(value.length === 1){
            value = "0"+value;
        }
        return value;
    }
}

DateTime            = d:Date "T" t:Time
                    {
                        return {
                            year: toNumber(d.year),
                            month: toNumber(d.month),
                            day: toNumber(d.day),
                            hour: toNumber(t.hours),
                            minute: toNumber(t.minutes),
                            second: toNumber(t.seconds),
                            millisecond: toNumber(t.millis),
                        };

                    }

Date                = y:Year "-" m:Month "-" d:Day
                    {
                        return {
                            year: y,
                            month:m,
                            day:d
                        }
                    }

Year                = y:(Digit Digit Digit Digit)
                    {
                        return toString(y);
                    }

Month               = m:("0" [1-9] / "10" / "11" / "12" / [0-9])
                    {
                        return toString(m);
                    }

Day                 = d:("0" [1-9] / "1" [0-9] / "2" [0-9] / "30" / "31" / [1-9])
                    {
                        return toString(d);
                    }

Time                = h:Hours ":" m:Minutes s:OptSeconds* ms:OptMilliseconds*
                    {
                        return {
                            hours: toString(h),
                            minutes:toString(m),
                            seconds: s[0] || 0,
                            millis: ms[0] || 0
                        };
                    }

Hours               = h:("0" [0-9] / "1" [0-9] / "2" [0-4] / [0-9])
                    {
                        return toString(h);
                    }

Minutes             = m:("0" [0-9] / [0-5][0-9] / [0-9])
                    {
                        return toString(m);
                    }

OptSeconds          = ":" s:Seconds
                    {
                        return toString(s)
                    }

OptMilliseconds     = "." s:Milliseconds
                    {
                        return toString(s)
                    }

Seconds             =  s:Minutes
                    {
                        return toString(s);
                    }

Milliseconds        = m:[0-9]*
                    {
                        if(m.length>7){
                            throw new Error('Milliseconds must be 0-7 digits but is ' + toString(m));
                        }
                        return toString(m);
                    }



Digit               = [0-9]
