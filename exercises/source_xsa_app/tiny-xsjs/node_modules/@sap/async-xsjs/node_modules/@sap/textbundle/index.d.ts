interface logger {
  fatal(): void;
  error(): void;
  warn(): void;
  info(): void;
  debug(): void;
  trace(): void;
}

declare module '@sap/textbundle' {

  class TextBundle {

    locale: { get: string };
    logger: logger;

    constructor(propertyFile: string, locale?: string);
    constructor(options: { path: string, locale?: string });

    fallbackLocal(locale: string): string;
    getLocale(): string;
    getText(key: string, args?: any[]): string;
    load(): Promise<this>;
    loadSync(): this;

  }

  class ResourceManager {

    logger: logger;

    constructor(basePath: string);

    getTextBundle(locale: string): TextBundle;
    loadTextBundle(locale: string): Promise<TextBundle>;
    getMiddleware(localeAccessor: string): (req: any, res: any, next: () => any) => any;
    getMiddleware(localeAccessor: (req: any) => string): (req: any, res: any, next: () => any) => any;

  }

  class PropertiesParser {

    constructor(content: string);

    load(propertyFile: string): Promise<PropertiesParser>;
    loadSync(propertyFile: string): PropertiesParser;
    getProperty(key: string, defaultValue: string): string;
    getKeys(): string[];
    setProperty(key: string, value: string): void;

  }

}

