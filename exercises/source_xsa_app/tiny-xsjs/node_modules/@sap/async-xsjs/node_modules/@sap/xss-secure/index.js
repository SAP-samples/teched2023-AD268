'use strict';

function hex(iChar, iLength) {
  var sHex = iChar.toString(16);
  if (iLength) {
    while (iLength > sHex.length) {
      sHex = '0' + sHex;
    }
  }
  return sHex;
}

var rHtml = /[\x00-\x2b\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g; // eslint-disable-line no-control-regex
var rHtmlReplace = /[\x00-\x08\x0b\x0c\x0e-\x1f\x7f-\x9f]/; // eslint-disable-line no-control-regex
var mHtmlLookup = {
  '<': '&lt;',
  '>': '&gt;',
  '&': '&amp;',
  '"': '&quot;'
};

var fHtml = function(sChar) {
  var sEncoded = mHtmlLookup[sChar];
  if (!sEncoded) {
    if (rHtmlReplace.test(sChar)) {
      sEncoded = '&#xfffd;';
    } else {
      sEncoded = '&#x' + hex(sChar.charCodeAt(0)) + ';';
    }
    mHtmlLookup[sChar] = sEncoded;
  }
  return sEncoded;
};

function encodeHTML(sString) {
  return sString.replace(rHtml, fHtml);
}

var rJS = /[\x00-\x2b\x2d\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g; // eslint-disable-line no-control-regex
var mJSLookup = {};
var fJS = function(sChar) {
  var sEncoded = mJSLookup[sChar];
  if (!sEncoded) {
    var iChar = sChar.charCodeAt(0);
    if (iChar < 256) {
      sEncoded = '\\x' + hex(iChar, 2);
    } else {
      sEncoded = '\\u' + hex(iChar, 4);
    }
    mJSLookup[sChar] = sEncoded;
  }
  return sEncoded;
};

function encodeJS(sString) {
  return sString.replace(rJS, fJS);
}

var rURL = /[\x00-\x2c\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\uffff]/g; // eslint-disable-line no-control-regex
var mURLLookup = {};

var fURL = function(sChar) {
  var sEncoded = mURLLookup[sChar];
  if (!sEncoded) {
    var iChar = sChar.charCodeAt(0);
    if (iChar < 128) {
      sEncoded = '%' + hex(iChar, 2);
    } else if (iChar < 2048) {
      sEncoded = '%' + hex((iChar >> 6) | 192, 2) + '%' + hex((iChar & 63) | 128, 2);
    } else {
      sEncoded = '%' + hex((iChar >> 12) | 224, 2) +
                 '%' + hex(((iChar >> 6) & 63) | 128, 2) +
                 '%' + hex((iChar & 63) | 128, 2);
    }
    mURLLookup[sChar] = sEncoded;
  }
  return sEncoded;
};

function encodeURL(sString) {
  return sString.replace(rURL, fURL);
}

var rCSS = /[\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xff\u2028\u2029][0-9A-Fa-f]?/g; // eslint-disable-line no-control-regex
var fCSS = function(sChar) {
  var iChar = sChar.charCodeAt(0);
  if (sChar.length === 1) {
    return '\\' + hex(iChar);
  } else {
    return '\\' + hex(iChar) + ' ' + sChar.substr(1);
  }
};

function encodeCSS(sString) {
  return sString.replace(rCSS, fCSS);
}

module.exports.encodeHTML = encodeHTML;
module.exports.encodeXML = encodeHTML;
module.exports.encodeJS = encodeJS;
module.exports.encodeURL = encodeURL;
module.exports.encodeCSS = encodeCSS;
