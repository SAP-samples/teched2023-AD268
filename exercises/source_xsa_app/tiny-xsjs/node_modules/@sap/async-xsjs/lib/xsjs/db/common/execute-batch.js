'use strict';

var _ = require('lodash');

module.exports.executeBatchPromise = executeBatchPromise;

async function executeBatchPromise (stmt, args) {
  var err = null;
  try {
    await stmt.executeBatch(args);
  } catch (error) {
    err = error;
  }
  var statuses = stmt.getRowStatus();

  if (!err) {
    return statuses;
  }

  var allFailed = statuses.every(function (value) {
    return value < 0;
  });

  if (allFailed) {
    throw err;
  }

  if (!_.isNumber(err.code)) {
    throw err;
  }

  var code = -Math.abs(err.code);
  statuses = statuses.map(function (value) {
    return (value < 0) ? code : value;
  });

  return statuses;
}